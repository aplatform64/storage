---
- name: "Storage / NFS / Server / Initialize / Check Platform compatibility"
  ansible.builtin.assert:
    quiet: true
    fail_msg: "Target Platform not supported: {{ ansible_distribution + ansible_distribution_major_version }}"
    that:
      - ansible_distribution + ansible_distribution_major_version in stg_nfs_server_platforms

- name: "Storage / NFS / Server / Initialize / Check required parameters: Control,Setup"
  ansible.builtin.assert:
    fail_msg: "Required end-state parameters are missing ({{ stg_nfs_server_subsystem | default('stg_nfs_server_subsystem') }})"
    quiet: true
    that:
      - stg_nfs_server_subsystem is defined
      - stg_nfs_server_subsystem | length > 0
      - stg_nfs_server_subsystem['enabled'] is defined
      - stg_nfs_server_subsystem['status'] is defined
      - stg_nfs_server_subsystem['status'] | length > 0
  when:
    - (stg_nfs_server['control'] is defined and stg_nfs_server['control']) or
      (stg_nfs_server['setup'] is defined and stg_nfs_server['setup'])

- name: "Storage / NFS / Server / Initialize / Set Platform specific variables"
  ansible.builtin.include_vars:
    file: "{{ 'platform-' + stg_nfs_server_os_family + '.yml' }}"

- name: "Storage / NFS / Server / Initialize / Resolve prerequisites"
  ansible.builtin.include_tasks:
    file: "stg_nfs_server_prerequisite.yml"
  when:
    - stg_nfs_server['resolve_prereq'] is defined
    - stg_nfs_server['resolve_prereq']
...
